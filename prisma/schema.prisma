// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//user model
model User {
  id          Int @id @default(autoincrement())
  name        String
  email       String
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  offers      Offer[]
}
//crypto model
model Crypto {
  id          Int @id @default(autoincrement())
  name        String
  symbol      String
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  offers      Offer[]
}
//fiat model
model Fiat {
  id          Int @id @default(autoincrement())
  name        String
  symbol      String
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  offer      Offer[]
}

//tradeduration model
model TradeDuration {
  id          Int @id @default(autoincrement())
  duration    Int
  type        DurationType @default(MINUTES)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  offer      Offer[]
}

//offer model
model Offer {
  id                Int @id @default(autoincrement())
  chainId           String
  contractAddress   String
  user              User   @relation(fields: [userId], references: [id])
  userId            Int
  crypto            Crypto @relation(fields: [cryptoId], references: [id])
  cryptoId          Int
  fiat              Fiat   @relation(fields: [fiatId], references: [id])
  fiatId            Int
  duration          TradeDuration @relation(fields: [durationId], references: [id])
  durationId        Int
  priceType         PriceType
  p2pType           P2PType @default(SECURE)
  offerType         OfferType
  maximumAmount     Float
  minimumAmount     Float
  margin            Float
  fixedRate         Float
  offerTerms        String
  tradeInstructions String
  status            OfferStatus @default(ACTIVE)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  deletedAt         DateTime?
}

enum PriceType {
  MARKET
  FIXED
}

enum OfferType {
  BUY
  SELL
}

enum P2PType {
  NORMAL
  SECURE
}

enum OfferStatus {
  ACTIVE
  CANCELED
  EXPIRED
  COMPLETED
}

enum DurationType {
  MINUTES
  HOURS
  DAYS
  WEEK
  MONTH
}
